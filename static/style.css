/*
  0. Before the css reset, let's set various css variables
*/
:root {
  /* --violet: #817c91; Removed because contrast is too low with #fff as the background */
  --violet: #5a5766;
  --pink: #c97d8f;
  --pink: #f25c80;
  --blanc: #ffffff;
  --color: var(--violet);
  --color-secondary: var(--pink);
  --color-alt: var(--blanc);
  --background: var(--blanc);
  --border: 1px solid var(--color);
  --border-radius: 4px;

  /* Paddings */
  --p: 50px;
  --p-left: var(--p);

  /* Sizes */
  --header-height: 100px;
  --aside-width: 300px;
}


@media (min-width: 1200px) {
  :root {
    --aside-width: 400px;
  }
}

@media (max-width: 768px) {
  :root {
    --p: 25px;
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    --color: var(--blanc);
    --color-alt: var(--violet);
    --background: var(--violet);
  }
}

/* 
  View Transition API properties
  - https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API 
  - https://developer.chrome.com/docs/web-platform/view-transitions/
*/
::view-transition-old(root),
::view-transition-new(root) {
  animation-duration: .25s;
}


/*
  Reset - Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}

/*
  Reset - Remove default margin
*/
* {
  margin: 0;
}

/*
  Reset - Allow percentage-based heights in the application
*/
html,
body {
  height: 100%;
}

/*
  Reset - Typographic tweaks!
   - Add accessible line-height
   - Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}

/*
  Reset - Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/*
  Reset - Remove built-in form typography styles
*/
input,
button,
textarea,
select {
  font: inherit;
}

/*
  Reset - Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/*
  Reset - Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}

/*
  Reset - And now custom styles :) 
*/
::-moz-selection {
  color: var(--background);
  background: var(--color);
}

/*
  Common styles
*/

::selection {
  color: var(--background);
  background: var(--color);
}

h1 {
  font-size: 5em;
}

h2 {
  font-size: 3em;
}
h3 {
  font-size: 2.5em;
}
h4 {
  font-size: 2em;
}

h5 {
  font-size: 1em;
}

h6 {
  font-size: 0.75em;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: normal;
  text-transform: uppercase;
  margin: 2rem 0 1rem;
  line-height: 1em;
}
h1:first-child,
h2:first-child,
h3:first-child,
h4:first-child,
h5:first-child,
h6:first-child {
  margin-top: 0;
}

@media (max-width: 768px) {
  h1 {
    font-size: 3em;
  }
}

h1 {
  display: flex;
}

a:not(.button) {
  color: var(--color);
  text-decoration: underline;
  text-decoration-color: var(--color-secondary);
  text-underline-offset: .25rem;
  transition: .1s;
}

a:not(.button):hover {
  color: var(--color-secondary);
  text-decoration-style: double;
}

a:not(.button)[target="_blank"]:hover::after {
  content: " ⇱";
  display: inline-block;
  transform: scaleX(-1);
  font-size: .75em;
  margin-left: .25rem;
  vertical-align: top;
}

a:focus {
  outline: thick double var(--color-secondary);
  border-radius: var(--border-radius);
  text-decoration: none;
}

blockquote {
  border-left: 1px solid var(--color);
  font-style: italic;
  padding-left: 1em;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial,
  'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
  'Noto Color Emoji';
  font-weight: 300;
  margin: 0;
  color: var(--color);
  background: var(--background);
  display: grid;
  grid-template-columns: [left] auto [aside] var(--aside-width) [right];
  grid-template-rows: [header] var(--header-height) [main] auto [bottom];
  min-height: 100vh;
}

@media (max-width: 768px) {
  body {
    display: flex;
    flex-direction: column;
  }
}

pre {
  font-family: 'San Francisco Mono', 'Consolas', 'Roboto Mono', monospace;
  font-size: 1.25em;
  line-height: 1.175em;
  padding: calc(var(--p) / 2);
  margin: 1em auto 1em 0;
  border: var(--border);
  border-radius: var(--border-radius);
  overflow: auto;
}

img {
  border: var(--border);
  border-radius: var(--border-radius);
  overflow: hidden;
  margin: 1em auto 1em 0;
}

hr {
  border: none;
  border-bottom: var(--border);
  border-width: 2px;
  width: 30vw;
  margin: var(--p) auto calc(1.25 * var(--p)) 0;
}

p code {
  border-radius: var(--border-radius);
  background: rgba(0, 0, 0, 0.1);
  padding: 0.25rem 0.5rem;
  border: 1px solid rgba(0, 0, 0, 0.15);
  white-space: nowrap;
}

/*
  Blocks styles
*/
main {
  grid-row: main / bottom;
  grid-column: left / aside;
  padding: var(--p);
  display: flex;
  flex-direction: column;
  line-height: 2em;
}

.main ul {
  line-height: 1em;
}

.main p {
  line-height: 1.5em;
}

main p,
main ul,
main ol {
  font-size: 1.25em;
  margin: 1rem 0 .25rem 0;
}

main ul li:before {
  content: "☞";
  padding-right: 0.5rem;
}

main ul, 
main ol {
  margin: 0 auto 1rem 0;
}
main li {
  margin: 0.5rem 0 0 0;
}

.introduction {
  margin: 1em 0 2em 0;
}

.introduction p,
.introduction ul {
  font-size: 1.5em;
  line-height: 1.5em;
}

header {
  font-size: 2em;
  grid-column: left / aside;
  grid-row: header / main;
  border-bottom: 1px solid var(--color);
  display: flex;
  align-items: center;
  padding-left: var(--p-left);
  font-weight: 300;
}

header a {
  text-decoration: none;
}

header svg {
  display: inline-block;
  width: 5rem;
  fill: currentColor;
}

@media (max-width: 768px) {
  header {
    min-height: var(--header-height);
  }
}

aside:empty {
  display: none;
}

@media (min-width: 768px) {
  aside {
    border-left: var(--border);
    grid-column: aside / right;
    grid-row: main / bottom;
    padding-left: calc(var(--p) / 2);
    padding-right: calc(var(--p) / 4);
    padding-top: var(--p);
  }
  aside nav {
    position: sticky;
    top: 1rem;

  }
}

@media (max-width: 768px) {
  aside {
    padding: var(--p);
    border-bottom: var(--border);
  }
}

ul,
ul li {
  margin: 0;
  padding: 0;
}

ul li {
  list-style: none;
}

nav a {
  text-decoration-color: currentColor;
  display: inline-flex;
  max-width: 100%;
}

nav small {
  margin-top: .25rem;
}

nav li {
  margin-bottom: 1rem;
  display: flex;
  flex-direction: column;
}

footer {
  grid-column: aside / right;
  grid-row: header / main;
  display: flex;
  justify-content: center;
  align-content: center;
  align-items: center;
  font-size: 2em;
}

@media (max-width: 768px) {
  footer {
    border-top: var(--border);
    min-height: var(--header-height);
  }
}

@media (min-width: 768px) {
  footer {
    border-bottom: var(--border);
    border-left: var(--border);
  }
}

footer a {
  text-transform: uppercase;
}

article p,
article pre,
p, li {
  max-width: 65ch; 
}

.footnote-definition p {
  margin: 0
}

.footnote-definition-label {
  padding-right: .5rem;
  display: inline-block;
}


article h1 {
  max-width: 25ch; 
  font-size: 4em;
}

article h2 {
  max-width: 25ch;
  font-size: 2.5em;
}


::selection {
  background: var(--color-secondary);
  color: var(--color);
}


.footnote-definition {
  font-size: .8rem;
  display: flex;
  flex-direction: row;
}


.button {
  background: var(--pink);
  color: var(--blanc);
  font-weight: normal;
  padding: .5rem;
  border-radius: var(--border-radius);
  text-decoration: none;
  transition: .1s;
  cursor: pointer;
}

.button:hover {
  color: var(--background);
  background: var(--color);
}

.button:hover::after {
  content: " ⇡";
}
